[{"path":"https://pablogguz.github.io/subincomeR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Pablo Garcia Guzman Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://pablogguz.github.io/subincomeR/articles/regional-convergence.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Use case: regional convergence","text":"vignette demonstrates use subincomeR package analyze regional income convergence using DOSE dataset. ’ll explore β\\beta-convergence (poorer regions growing faster richer ones) σ\\sigma-convergence (reduction income dispersion time).","code":""},{"path":"https://pablogguz.github.io/subincomeR/articles/regional-convergence.html","id":"loading-required-packages","dir":"Articles","previous_headings":"","what":"Loading required packages","title":"Use case: regional convergence","text":"","code":"library(subincomeR) library(dplyr) library(ggplot2) library(extrafont) library(ggtext) library(fixest) library(countrycode)"},{"path":"https://pablogguz.github.io/subincomeR/articles/regional-convergence.html","id":"getting-the-data","dir":"Articles","previous_headings":"","what":"Getting the data","title":"Use case: regional convergence","text":"First, let’s load DOSE dataset prepare analysis. use data 2000 2019 calculate growth rates initial income levels region:","code":"# Load DOSE data data <- getDOSE(years = c(2000, 2019))   # Calculate growth rates and initial income convergence_data <- data %>%     # filter missing values      filter(!is.na(grp_pc_usd_2015)) %>%     # keep all regions with data for both years     group_by(GID_1) %>%     filter(n() == 2) %>%     arrange(year) %>%     summarize(         initial_pop = first(pop),         initial_income = first(grp_pc_usd_2015),         final_income = last(grp_pc_usd_2015),         growth_rate = (log(final_income) - log(initial_income)) / (max(year) - min(year)),         country = first(GID_0)     ) %>%     ungroup() %>%     # get continent     mutate(       continent = countrycode(country, origin = \"iso3c\", destination = \"continent\")     )"},{"path":"https://pablogguz.github.io/subincomeR/articles/regional-convergence.html","id":"unconditional-beta-convergence","dir":"Articles","previous_headings":"","what":"Unconditional β\\beta-convergence","title":"Use case: regional convergence","text":"’ll test unconditional β\\beta-convergence regressing growth rates logged initial income. Specifically, ’ll estimate following model: 1Tlog(yi,t+Tyi,t)=α+βlog(yi,t)+ϵi \\frac{1}{T}\\log\\left(\\frac{y_{,t+T}}{y_{,t}}\\right) = \\alpha + \\beta\\log(y_{,t}) + \\epsilon_{} yi,ty_{,t} income region ii time tt, TT length period. left-hand side approximates average annual growth rate. negative estimate β\\beta indicates convergence, implying poorer regions grow faster richer ones. speed convergence can recovered estimate β\\beta. can now plot results:  coefficient initial income negative highly significant, indicating poorer regions grown faster richer ones period study. magnitude coefficient provides estimate speed convergence: case, coefficient suggests income gap regions closing rate 1.4% per year.","code":"# Run convergence regression model <- feols(   growth_rate ~ log(initial_income),    data = convergence_data,   vcov = \"hetero\" )  # Create formatted coefficients for the plot subtitle model_stats <- summary(model) beta <- coef(model)[\"log(initial_income)\"] pval <- model_stats$coeftable[\"log(initial_income)\", \"Pr(>|t|)\"] # Plot convergence regression ----  ## Theme ---- theme_convergence <- function() {   theme_minimal() +     theme(       text = element_text(family = \"Open Sans\", size = 16),       plot.title = element_text(size = 18, margin = margin(b = 20)),       plot.subtitle = element_text(size = 14, color = \"grey40\"),       plot.caption = element_textbox_simple(         size = 12,          color = \"grey40\",          margin = margin(t = 20),         hjust = 0       ),       legend.position = \"top\",       legend.justification = \"left\",       panel.grid.minor = element_blank(),       panel.grid.major.x = element_blank(),       axis.title = element_text(size = 14)     ) }  continent_colors <- c(   \"Africa\" = \"#E31C1C\",       # Red   \"Asia\" = \"#0066CC\",         # Blue   \"Europe\" = \"#4DAF4A\",       # Green   \"Americas\" = \"#984EA3\",     # Purple   \"Oceania\" = \"#FF7F00\"       # Orange )  ## Plot ---- ggplot(convergence_data,         aes(x = log(initial_income),             y = growth_rate * 100)) +    geom_point(     aes(size = initial_pop,         color = continent),     alpha = 0.4   ) +   geom_smooth(     method = \"lm\",     color = \"#0072B2\",     linewidth = 1.5,     se = TRUE,     alpha = 0.5   ) +   annotate(     \"text\",     x = 10.5,     y = 7,     label = sprintf(\"β = %.3f\\n(p = %.3f)\", beta, pval),     hjust = 0,     size = 5,     family = \"Open Sans\"   ) +   scale_y_continuous(     labels = function(x) paste0(x, \"%\")   ) +   scale_size_continuous(     range = c(1, 8),     guide = \"none\"   ) +   scale_color_manual(     values = continent_colors,     name = NULL   ) +   labs(     title = \"Regional Income Convergence, 2000-2019\",     x = \"Log Initial Income (2000)\",     y = \"Average Annual Growth Rate\",     caption = \"**Data** DOSE dataset | **Plot** @pablogguz_\"   ) +   theme_convergence() +   theme(     legend.position = \"top\",     legend.direction = \"horizontal\",     legend.justification = \"left\",     legend.key.size = unit(1, \"lines\"),        legend.margin = margin(t = 0, b = 0)   ) +   guides(     color = guide_legend(override.aes = list(size = 4))    )"},{"path":"https://pablogguz.github.io/subincomeR/articles/regional-convergence.html","id":"conditional-beta-convergence","dir":"Articles","previous_headings":"","what":"Conditional β\\beta-convergence","title":"Use case: regional convergence","text":"now estimate conditional convergence including country fixed effects: 1Tlog(yi,t+Tyi,t)=αc+βlog(yi,t)+ϵi \\frac{1}{T}\\log\\left(\\frac{y_{,t+T}}{y_{,t}}\\right) = \\alpha_c + \\beta\\log(y_{,t}) + \\epsilon_{} αc\\alpha_c represents country-specific effects control differences steady states across countries. resulting estimate β\\beta speed convergence within countries. can compare estimate previous one assess role country fixed effects convergence process: absolute convergence coefficient (-0.0137) captures within -country convergence, conditional estimate (-0.0103) reflects within-country convergence. comparison suggests 75% (25%) convergence occurs within () countries.","code":"model_conditional <- feols(   growth_rate ~ log(initial_income) | country,    data = convergence_data,   vcov = \"hetero\" )  etable(   model,    model_conditional,   title = \"Regional Convergence Results\",   headers = c(\"Absolute\", \"Conditional\"),   se.below = TRUE,   keep = \"log\",   notes = \"Heteroskedasticity-robust standard errors in parentheses.\" ) #>                           model model_con.. #>                        Absolute Conditional #> Dependent Var.:     growth_rate growth_rate #>                                             #> log(initial_income)  -0.0137***  -0.0103*** #>                      (0.0005)    (0.0014)   #> Fixed-Effects:      ----------- ----------- #> country                      No         Yes #> ___________________ ___________ ___________ #> S.E. type           Heter.-rob. Heter.-rob. #> Observations                859         859 #> R2                      0.43093     0.86506 #> Within R2                    --     0.11455 #> --- #> Signif. codes: 0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"},{"path":"https://pablogguz.github.io/subincomeR/articles/regional-convergence.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Use case: regional convergence","text":"Barro, R.J. Sala--Martin, X., 1992. Convergence. Journal Political Economy, 100(2), pp.223-251. Wenz, L., Carr, R.D., Koegel, N., Kotz, M., Kalkuhl, M., 2023. DOSE – Global data set reported sub-national economic output. Nature Scientific Data, 10(1), pp.1-12.","code":""},{"path":"https://pablogguz.github.io/subincomeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pablo García Guzmán. Author, maintainer, copyright holder.","code":""},{"path":"https://pablogguz.github.io/subincomeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"García Guzmán P (2025). subincomeR: Access Global Sub-National Income Data. R package version 0.3.0, https://pablogguz.github.io/subincomeR/, https://github.com/pablogguz/subincomeR.","code":"@Manual{,   title = {subincomeR: Access to Global Sub-National Income Data},   author = {Pablo {García Guzmán}},   year = {2025},   note = {R package version 0.3.0,     https://pablogguz.github.io/subincomeR/},   url = {https://github.com/pablogguz/subincomeR}, }"},{"path":"https://pablogguz.github.io/subincomeR/index.html","id":"subincomer-","dir":"","previous_headings":"","what":"Access to Global Sub-National Income Data","title":"Access to Global Sub-National Income Data","text":"subincomeR R package providing tools accessing analyzing MCC-PIK Database Sub-national Economic Output (DOSE). DOSE comprehensive global dataset sub-national income covering 1,600 regions across 83 countries 1960 2020, compiled official statistical agencies, yearbooks, academic sources. DOSE provides data first administrative level (GADM-1), includes subnational divisions like states, provinces, regions. GADM (Global Administrative Areas Database) spatial database world’s administrative boundaries, providing standardized system defining administrative divisions across countries. example, GADM-1 corresponds states United States, départements France, provinces China. dataset available download Zenodo. can find documentation metadata Wenz et al. (2023).","code":""},{"path":"https://pablogguz.github.io/subincomeR/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Access to Global Sub-National Income Data","text":"Easy access: download cache DOSE data locally, including geometries region Spatial integration: Match coordinates DOSE regions using GADM boundaries","code":""},{"path":"https://pablogguz.github.io/subincomeR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Access to Global Sub-National Income Data","text":"can install released version subincomeR CRAN : Alternatively, can install development version GitHub :","code":"install.packages(\"subincomeR\") # install.packages(\"pak\") pak::pak(\"pablogguz/subincomeR\")"},{"path":"https://pablogguz.github.io/subincomeR/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"Access to Global Sub-National Income Data","text":"","code":"# Load the complete dataset data <- getDOSE()  # Load data for specific years data_2019 <- getDOSE(years = 2019)  # Match coordinates to regions matched_data <- matchDOSE(   lat = c(19.4326, 51.5074),   long = c(-99.1332, -0.1276) )"},{"path":"https://pablogguz.github.io/subincomeR/index.html","id":"contributing","dir":"","previous_headings":"","what":"Contributing","title":"Access to Global Sub-National Income Data","text":"Contributions welcome! Please feel free submit pull request. major changes, please open issue first discuss like change.","code":""},{"path":"https://pablogguz.github.io/subincomeR/index.html","id":"author","dir":"","previous_headings":"","what":"Author","title":"Access to Global Sub-National Income Data","text":"Pablo García Guzmán EBRD","code":""},{"path":"https://pablogguz.github.io/subincomeR/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Access to Global Sub-National Income Data","text":"Wenz, L., Carr, R.D., Kögel, N. et al. (2023). DOSE – Global data set reported sub-national economic output. Scientific Data, 10, 425. https://doi.org/10.1038/s41597-023-023 Wenz, L., Kotz, M., Kalkuhl, M., Carr, R., Kögel, N., Giesen, C., Reckwitz, ., Wedemeyer, J., & Ziegler, K. (2024). DOSE - Global dataset reported subnational economic output [Data set]. Zenodo. https://doi.org/10.5281/zenodo.13773040","code":""},{"path":"https://pablogguz.github.io/subincomeR/reference/getDOSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and load the DOSE dataset into memory — getDOSE","title":"Download and load the DOSE dataset into memory — getDOSE","text":"function downloads DOSE dataset Zenodo loads memory dataframe. allows optional filtering dataset based specific years /countries. country format can specified ensure correct filtering. function automatically handles different download methods based system capabilities.","code":""},{"path":"https://pablogguz.github.io/subincomeR/reference/getDOSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and load the DOSE dataset into memory — getDOSE","text":"","code":"getDOSE(   years = NULL,   countries = NULL,   format_countries = \"country.name\",   path = NULL )"},{"path":"https://pablogguz.github.io/subincomeR/reference/getDOSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and load the DOSE dataset into memory — getDOSE","text":"years Optional vector years filter DOSE dataset. NULL (default), data years returned. countries Optional vector countries filter DOSE dataset. Countries can specified ISO2C, ISO3C, country name format. Use format_countries parameter specify format countries vector. format_countries format countries provided countries parameter. Acceptable values 'iso2c', 'iso3c', 'country.name'. Default 'country.name'. parameter used countries parameter NULL. path Optional character string specifying store downloaded data. NULL (default), uses tempdir().","code":""},{"path":"https://pablogguz.github.io/subincomeR/reference/getDOSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and load the DOSE dataset into memory — getDOSE","text":"dataframe containing filtered DOSE dataset based input parameters.","code":""},{"path":"https://pablogguz.github.io/subincomeR/reference/getDOSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and load the DOSE dataset into memory — getDOSE","text":"","code":"# \\donttest{ # Load the entire dataset data_all <- getDOSE() #> DOSE dataset not found. Downloading... #> Download successful using curl #> DOSE dataset successfully downloaded and stored in /tmp/Rtmpu9nUJx #> Loading DOSE dataset...  # Load dataset filtered by specific years data_2018_2019 <- getDOSE(years = c(2018, 2019)) #> Loading DOSE dataset...  # Load dataset filtered by specific countries (using ISO3C codes) data_usa_can <- getDOSE(countries = c('USA', 'CAN'), format_countries = 'iso3c') #> Loading DOSE dataset...  # Load dataset filtered by year and countries (using country names) data_mex_2019 <- getDOSE(years = 2019, countries = c('Mexico'),                           format_countries = 'country.name') #> Loading DOSE dataset... # }"},{"path":"https://pablogguz.github.io/subincomeR/reference/getDOSE_geom.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and load GADM-DOSE geometries — getDOSE_geom","title":"Download and load GADM-DOSE geometries — getDOSE_geom","text":"function downloads loads GADM-DOSE geometries remote source. geometries stored temporary directory default, user-specified location provided. uncompressed geometries file approximately 769 MB.","code":""},{"path":"https://pablogguz.github.io/subincomeR/reference/getDOSE_geom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and load GADM-DOSE geometries — getDOSE_geom","text":"","code":"getDOSE_geom(path = NULL, countries = NULL, download = FALSE)"},{"path":"https://pablogguz.github.io/subincomeR/reference/getDOSE_geom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and load GADM-DOSE geometries — getDOSE_geom","text":"path Optional character string specifying store files. NULL (default), uses tempdir(). countries Optional vector ISO3C country codes filter geometries. NULL (default), available geometries returned. download Logical indicating whether download without confirmation. Default FALSE, prompt confirmation interactive sessions. Set TRUE skip confirmation.","code":""},{"path":"https://pablogguz.github.io/subincomeR/reference/getDOSE_geom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and load GADM-DOSE geometries — getDOSE_geom","text":"sf object containing GADM-DOSE geometries","code":""},{"path":"https://pablogguz.github.io/subincomeR/reference/getDOSE_geom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and load GADM-DOSE geometries — getDOSE_geom","text":"","code":"# \\donttest{ # Load all geometries with download confirmation geom_all <- getDOSE_geom() #>  #> The GADM-DOSE geometries file is approximately 769 MB when uncompressed. #>  #> Downloading GADM-DOSE geometries... #> Download successful using curl #> Extracting files... #>  #> Geometries saved in /tmp/Rtmpu9nUJx  # Load geometries with automatic download geom_auto <- getDOSE_geom(download = TRUE) #>  #> Geometries saved in /tmp/Rtmpu9nUJx  # Load geometries for specific countries geom_subset <- getDOSE_geom(   countries = c(\"USA\", \"CAN\", \"MEX\"),   download = TRUE ) #>  #> Geometries saved in /tmp/Rtmpu9nUJx # }"},{"path":"https://pablogguz.github.io/subincomeR/reference/matchDOSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Match coordinates to DOSE dataset — matchDOSE","title":"Match coordinates to DOSE dataset — matchDOSE","text":"function matches input coordinates (latitude longitude) DOSE dataset. accepts either vectors latitudes longitudes dataframe containing coordinates. matching, ensures unique coordinates processed avoid duplicating operations identical coordinates. uses GADM-1 geometries match coordinates regions returns dataframe unique input coordinates matched DOSE data.","code":""},{"path":"https://pablogguz.github.io/subincomeR/reference/matchDOSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match coordinates to DOSE dataset — matchDOSE","text":"","code":"matchDOSE(   lat = NULL,   long = NULL,   df = NULL,   lat_col = \"lat\",   long_col = \"long\",   years = NULL,   countries = NULL,   format_countries = \"iso3c\",   path = NULL,   download = FALSE )"},{"path":"https://pablogguz.github.io/subincomeR/reference/matchDOSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match coordinates to DOSE dataset — matchDOSE","text":"lat Optional vector latitudes points match. Required dataframe provided. long Optional vector longitudes points match. Required dataframe provided. df Optional dataframe containing coordinates possibly additional columns. provided, 'lat' 'long' vectors provided. dataframe must include columns specified 'lat_col' 'long_col' parameters. lat_col Optional name latitude column 'df'. used 'df' provided. Defaults \"lat\". long_col Optional name longitude column 'df'. used 'df' provided. Defaults \"long\". years Optional vector years filter DOSE dataset. NULL (default), 1:m matching performed data years returned. countries Optional vector dataframe column name country identifiers. provided, function skips country matching step. Can significantly reduce processing time. format_countries Specifies format country identifiers 'countries'. Options \"country.name\" (default), \"iso3c\", \"iso2c\". parameter ignored 'countries' NULL. path Optional character string specifying store downloaded files. NULL (default), uses tempdir(). download Logical indicating whether download without confirmation. Default FALSE, prompt confirmation interactive sessions. Set TRUE skip confirmation.","code":""},{"path":"https://pablogguz.github.io/subincomeR/reference/matchDOSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match coordinates to DOSE dataset — matchDOSE","text":"dataframe input coordinates (additional input dataframe columns) matched DOSE data.","code":""},{"path":"https://pablogguz.github.io/subincomeR/reference/matchDOSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match coordinates to DOSE dataset — matchDOSE","text":"","code":"# \\donttest{ # Match coordinates using vectors matched_data <- matchDOSE(lat = c(19.4326, 51.5074),                           long = c(-99.1332, -0.1276)) #> Passing 2 coordinates to the Nominatim single coordinate geocoder #> Query completed in: 2 seconds #>  #> Geometries saved in /tmp/Rtmpu9nUJx #> Matching coordinates to subdivisions... #> Loading DOSE dataset...  # Match coordinates using a dataframe df <- data.frame(ID = 1:2,                   latitude = c(19.4326, 51.5074),                   longitude = c(-99.1332, -0.1276)) matched_data_df <- matchDOSE(df = df,                              lat_col = \"latitude\",                              long_col = \"longitude\") #> Passing 2 coordinates to the Nominatim single coordinate geocoder #> Query completed in: 2 seconds #>  #> Geometries saved in /tmp/Rtmpu9nUJx #> Matching coordinates to subdivisions... #> Loading DOSE dataset...  # Match coordinates for a specific year matched_data_2019 <- matchDOSE(lat = c(19.4326),                                 long = c(-99.1332),                                 years = 2019) #> Passing 1 coordinate to the Nominatim single coordinate geocoder #> Query completed in: 1 seconds #>  #> Geometries saved in /tmp/Rtmpu9nUJx #> Matching coordinates to subdivisions... #> Loading DOSE dataset...  # Match coordinates with known countries matched_data_countries <- matchDOSE(lat = c(19.4326, 51.5074),                                    long = c(-99.1332, -0.1276),                                    countries = c(\"MEX\", \"GBR\"),                                    format_countries = \"iso3c\") #> Country identifiers provided. Skipping geocoding... #>  #> Geometries saved in /tmp/Rtmpu9nUJx #> Matching coordinates to subdivisions... #> Loading DOSE dataset... # }"},{"path":"https://pablogguz.github.io/subincomeR/reference/subincomeR-package.html","id":null,"dir":"Reference","previous_headings":"","what":"subincomeR: Access to Global Sub-National Income Data — subincomeR-package","title":"subincomeR: Access to Global Sub-National Income Data — subincomeR-package","text":"Provides access granular sub-national income data MCC-PIK Database Sub-national Economic Output (DOSE). package downloads processes data open repository 'Zenodo' (https://zenodo.org/records/13773040). Functions provided fetch data multiple geographic levels, match coordinates administrative regions, access associated geometries.","code":""},{"path":[]},{"path":"https://pablogguz.github.io/subincomeR/reference/subincomeR-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"subincomeR: Access to Global Sub-National Income Data — subincomeR-package","text":"Maintainer: Pablo García Guzmán garciagp@ebrd.com [copyright holder]","code":""},{"path":"https://pablogguz.github.io/subincomeR/news/index.html","id":"subincomer-030","dir":"Changelog","previous_headings":"","what":"subincomeR 0.3.0","title":"subincomeR 0.3.0","text":"Updated DOSE dataset version 2.10","code":""},{"path":"https://pablogguz.github.io/subincomeR/news/index.html","id":"subincomer-022","dir":"Changelog","previous_headings":"","what":"subincomeR 0.2.2","title":"subincomeR 0.2.2","text":"CRAN release: 2024-12-19 Removed writing user’s home filespace default (using tempdir() instead) Added explicit path parameter througout allow users specify custom storage locations Added download confirmation large files option skip non-interactive sessions","code":""},{"path":"https://pablogguz.github.io/subincomeR/news/index.html","id":"subincomer-021","dir":"Changelog","previous_headings":"","what":"subincomeR 0.2.1","title":"subincomeR 0.2.1","text":"Fixed minor style issues DESCRIPTION file","code":""},{"path":"https://pablogguz.github.io/subincomeR/news/index.html","id":"subincomer-020","dir":"Changelog","previous_headings":"","what":"subincomeR 0.2.0","title":"subincomeR 0.2.0","text":"Added getDOSE_geom() function explicitly download geometries sub-national regions","code":""},{"path":"https://pablogguz.github.io/subincomeR/news/index.html","id":"subincomer-013","dir":"Changelog","previous_headings":"","what":"subincomeR 0.1.3","title":"subincomeR 0.1.3","text":"Updated DOSE dataset version 2.9 Improved download handling better manage corrupted downloads connection issues","code":""},{"path":"https://pablogguz.github.io/subincomeR/news/index.html","id":"subincomer-012","dir":"Changelog","previous_headings":"","what":"subincomeR 0.1.2","title":"subincomeR 0.1.2","text":"Added option specify path .gpkg file sub-national geometries stored","code":""},{"path":"https://pablogguz.github.io/subincomeR/news/index.html","id":"subincomer-011","dir":"Changelog","previous_headings":"","what":"subincomeR 0.1.1","title":"subincomeR 0.1.1","text":"Added option pre-specify country identifiers matchDOSE() skip first step geocoding process","code":""},{"path":"https://pablogguz.github.io/subincomeR/news/index.html","id":"subincomer-010","dir":"Changelog","previous_headings":"","what":"subincomeR 0.1.0","title":"subincomeR 0.1.0","text":"Initial release","code":""}]
