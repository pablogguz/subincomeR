[{"path":"https://pablogguz.github.io/subincomeR/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Pablo Garcia Guzman Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://pablogguz.github.io/subincomeR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pablo Garcia-Guzman. Author, maintainer.","code":""},{"path":"https://pablogguz.github.io/subincomeR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Garcia-Guzman P (2024). subincomeR: Coordinate-based Access Global Sub-national Income Data R. R package version 0.1.3, https://pablogguz.github.io/subincomeR/.","code":"@Manual{,   title = {subincomeR: Coordinate-based Access to Global Sub-national Income Data in R},   author = {Pablo Garcia-Guzman},   year = {2024},   note = {R package version 0.1.3},   url = {https://pablogguz.github.io/subincomeR/}, }"},{"path":"https://pablogguz.github.io/subincomeR/index.html","id":"subincomer-","dir":"","previous_headings":"","what":"Coordinate-based Access to Global Sub-national Income Data in R","title":"Coordinate-based Access to Global Sub-national Income Data in R","text":"R package access DOSE, global dataset reported sub-national income data covering 1,600 sub-national regions across 83 countries period 1960-2020. Data gathered directly relevant governmental statistical agencies, yearbooks, academic literature, harmonised accordingly.","code":""},{"path":"https://pablogguz.github.io/subincomeR/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Coordinate-based Access to Global Sub-national Income Data in R","text":"","code":"# install.packages(\"pak\") pak::pak(\"pablogguz/subincomeR\")"},{"path":"https://pablogguz.github.io/subincomeR/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Coordinate-based Access to Global Sub-national Income Data in R","text":"Wenz, L., Carr, R.D., Kögel, N. et al. (2023). DOSE – Global data set reported sub-national economic output. Scientific Data, 10, 425. https://doi.org/10.1038/s41597-023-023 Wenz, L., Kotz, M., Kalkuhl, M., Carr, R., Kögel, N., Giesen, C., Reckwitz, ., Wedemeyer, J., & Ziegler, K. (2024). DOSE - Global dataset reported subnational economic output [Data set]. Zenodo. https://doi.org/10.5281/zenodo.13773040","code":""},{"path":"https://pablogguz.github.io/subincomeR/reference/getDOSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and load the DOSE dataset into memory — getDOSE","title":"Download and load the DOSE dataset into memory — getDOSE","text":"function downloads DOSE dataset Zenodo loads memory dataframe. allows optional filtering dataset based specific years /countries. country format can specified ensure correct filtering. function automatically handles different download methods based system capabilities.","code":""},{"path":"https://pablogguz.github.io/subincomeR/reference/getDOSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and load the DOSE dataset into memory — getDOSE","text":"","code":"getDOSE(years = NULL, countries = NULL, format_countries = \"country.name\")"},{"path":"https://pablogguz.github.io/subincomeR/reference/getDOSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and load the DOSE dataset into memory — getDOSE","text":"years Optional vector years filter DOSE dataset. NULL (default), data years returned. countries Optional vector countries filter DOSE dataset. Countries can specified ISO2C, ISO3C, country name format. Use format_countries parameter specify format countries vector. format_countries format countries provided countries parameter. Acceptable values 'iso2c', 'iso3c', 'country.name'. Default 'country.name'. parameter used countries parameter NULL.","code":""},{"path":"https://pablogguz.github.io/subincomeR/reference/getDOSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and load the DOSE dataset into memory — getDOSE","text":"dataframe containing filtered DOSE dataset based input parameters.","code":""},{"path":"https://pablogguz.github.io/subincomeR/reference/getDOSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and load the DOSE dataset into memory — getDOSE","text":"","code":"# Load the entire dataset data_all <- getDOSE() #> DOSE dataset not found on machine. Downloading... #> Download successful using curl #> DOSE dataset successfully downloaded and stored in ~/.cache/subincomeR #> Loading DOSE dataset...  # Load dataset filtered by specific years data_2018_2019 <- getDOSE(years = c(2018, 2019)) #> Loading DOSE dataset...  # Load dataset filtered by specific countries (using ISO3C codes) data_usa_can <- getDOSE(countries = c('USA', 'CAN'), format_countries = 'iso3c') #> Loading DOSE dataset...  # Load dataset filtered by year and countries (using country names) data_mex_2019 <- getDOSE(years = 2019, countries = c('Mexico'), format_countries = 'country.name') #> Loading DOSE dataset..."},{"path":"https://pablogguz.github.io/subincomeR/reference/matchDOSE.html","id":null,"dir":"Reference","previous_headings":"","what":"Match coordinates to DOSE dataset — matchDOSE","title":"Match coordinates to DOSE dataset — matchDOSE","text":"function matches input coordinates (latitude longitude) DOSE dataset. accepts either vectors latitudes longitudes dataframe containing coordinates. matching, ensures unique coordinates processed avoid duplicating operations identical coordinates. downloads GADM-1 geometries specified URL already cached locally, unzips , returns dataframe unique input coordinates matched DOSE data. Optionally, function can filter DOSE dataset specific years. Additionally, users can specify countries directly skip country matching step, potentially saving processing time.","code":""},{"path":"https://pablogguz.github.io/subincomeR/reference/matchDOSE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Match coordinates to DOSE dataset — matchDOSE","text":"","code":"matchDOSE(   lat = NULL,   long = NULL,   df = NULL,   lat_col = \"lat\",   long_col = \"long\",   years = NULL,   countries = NULL,   format_countries = \"iso3c\",   gpkg_path = NULL )"},{"path":"https://pablogguz.github.io/subincomeR/reference/matchDOSE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Match coordinates to DOSE dataset — matchDOSE","text":"lat Optional vector latitudes points match. Required dataframe provided. long Optional vector longitudes points match. Required dataframe provided. df Optional dataframe containing coordinates possibly additional columns. provided, 'lat' 'long' vectors provided. dataframe must include columns specified 'lat_col' 'long_col' parameters. lat_col Optional name latitude column 'df'. used 'df' provided. Defaults \"lat\". long_col Optional name longitude column 'df'. used 'df' provided. Defaults \"long\". years Optional vector years filter DOSE dataset. NULL (default), 1:m matching performed data years returned. countries Optional vector dataframe column name country identifiers. provided, function skips country matching step. identifiers can format specified 'format_countries'. can significantly reduce processing time. format_countries Specifies format country identifiers 'countries'. Options \"country.name\" (default), \"iso3c\", \"iso2c\". parameter ignored 'countries' NULL. gpkg_path Optional path store .gpkg file. specified, default cache directory used.","code":""},{"path":"https://pablogguz.github.io/subincomeR/reference/matchDOSE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Match coordinates to DOSE dataset — matchDOSE","text":"dataframe input coordinates (additional input dataframe columns) matched DOSE data.","code":""},{"path":"https://pablogguz.github.io/subincomeR/reference/matchDOSE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Match coordinates to DOSE dataset — matchDOSE","text":"","code":"# Match two pairs of coordinates to DOSE using vectors matched_data_vectors <- matchDOSE(lat = c(19.4326, 51.5074), long = c(-99.1332, -0.1276)) #> Geometries not found in machine. Downloading GADM-DOSE geometries... #> Download successful using curl #> GADM-DOSE successfully downloaded and stored in ~/.cache/subincomeR #> Extracting files... #> Passing 2 coordinates to the Nominatim single coordinate geocoder #> Query completed in: 2 seconds #> Matching coordinates to subdivisions... #> Loading DOSE dataset...  # Match two pairs of coordinates to DOSE using a dataframe df <- data.frame(ID = 1:2, latitude = c(19.4326, 51.5074), longitude = c(-99.1332, -0.1276)) matched_data_df <- matchDOSE(df = df, lat_col = \"latitude\", long_col = \"longitude\") #> Passing 2 coordinates to the Nominatim single coordinate geocoder #> Query completed in: 2 seconds #> Matching coordinates to subdivisions... #> Loading DOSE dataset...  # Match coordinates to DOSE for a specific year using vectors matched_data_2019 <- matchDOSE(lat = c(19.4326), long = c(-99.1332), years = 2019) #> Passing 1 coordinate to the Nominatim single coordinate geocoder #> Query completed in: 1 seconds #> Matching coordinates to subdivisions... #> Loading DOSE dataset... #> Filtering years...  # Match coordinates and specify countries to skip country matching matched_data_with_countries <- matchDOSE(lat = c(19.4326, 51.5074), long = c(-99.1332, -0.1276),                                          countries = c(\"MEX\", \"GBR\"), format_countries = \"iso3c\") #> Country identifiers are provided. Skipping geocoding... #> Matching coordinates to subdivisions... #> Loading DOSE dataset..."},{"path":"https://pablogguz.github.io/subincomeR/news/index.html","id":"subincomer-013","dir":"Changelog","previous_headings":"","what":"subincomeR 0.1.3","title":"subincomeR 0.1.3","text":"Updated DOSE dataset version 2.9 Improved download handling better manage corrupted downloads connection issues","code":""},{"path":"https://pablogguz.github.io/subincomeR/news/index.html","id":"subincomer-012","dir":"Changelog","previous_headings":"","what":"subincomeR 0.1.2","title":"subincomeR 0.1.2","text":"Added option specify path .gpkg file sub-national geometries stored","code":""},{"path":"https://pablogguz.github.io/subincomeR/news/index.html","id":"subincomer-011","dir":"Changelog","previous_headings":"","what":"subincomeR 0.1.1","title":"subincomeR 0.1.1","text":"Added option pre-specify country identifiers matchDOSE() skip first step geocoding process","code":""},{"path":"https://pablogguz.github.io/subincomeR/news/index.html","id":"subincomer-010","dir":"Changelog","previous_headings":"","what":"subincomeR 0.1.0","title":"subincomeR 0.1.0","text":"Initial release","code":""}]
